

name: CICD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Install maven
      run: |
       sudo apt install -y maven
       mvn -v
       
    - name: Build with Maven
      run: mvn package --file pom.xml

    - name: Install Trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y

    - name: FS SCAN 1; Trivy fs Scan
      run: trivy fs --format table -o fs.html .

    - name: FS SCAN 2; Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@0.20.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        trivy-config: trivy.yaml

    - name: Install Docker
      run: |
         sudo apt install docker.io -y
         sudo chmod 666 /var/run/docker.sock
         docker version
         
    - name: Install SonarQube using Docker Container
      run: |
        # docker run -d -p 9000:9000 sonarqube:lts-community
        docker ps

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
       docker build -t felix081/taskmaster:latest .

    - name: Trivy Image Scan
      run: trivy image --format table -o image.html felix081/taskmaster:latest

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker Image
      run: |
         docker push  felix081/taskmaster:latest

    
      

    
    

